name: Docker Build and Push

on:
  workflow_dispatch:
  workflow_call:

jobs:
  docker-build:
    name: Docker Build and Test
    runs-on: ubuntu-latest

    outputs:
      image-tag: ${{ github.sha }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: GHCR Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}


      - name: Test Docker Image
        run: |
          docker images
          
          # Debug: Check if secrets are available
          echo "Checking environment variables:"
          echo "MONGO_USERNAME: $MONGO_USERNAME"
          
          # Start the container
          docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI="${{ secrets.MONGO_URI }}" \
            -e MONGO_USERNAME="${{ secrets.MONGO_USERNAME }}" \
            -e MONGO_PASSWORD="${{ secrets.MONGO_PASSWORD }}" \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}

          # Wait for container to start
          sleep 15
          
          # Get container IP
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo "Container IP: $IP"
          
          # Check if container is running
          docker ps
          
          # Check container logs
          echo "Container logs:"
          docker logs solar-system-app
          
          echo "Testing the application..."
          # Test the health endpoint
          response=$(curl -s http://127.0.0.1:3000/live)
          echo "Response: $response"
          if [[ $response == *"live"* ]]; then
            echo "Health check passed!"
          else
            echo "Health check failed!"
            docker logs solar-system-app
            exit 1
          fi

      - name: Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}

      - name: Update Helm values with new image tag
        run: |
          sed -i "s|repository: .*|repository: docker.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}|g" ./helm/values.yaml
          sed -i "s|tag: .*|tag: ${{ github.sha }}|g" ./helm/values.yaml

      - name: Push Helm chart to separate repo
        run: |
          git clone https://${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository_owner }}/helm.git helm-repo
          cd helm-repo

          # Copy updated helm folder into this repo
          rm -rf *
          cp -r ../helm/* .

          # Commit and push changes
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add .
          git commit -m "Update helm chart with image ${{ github.sha }}" || echo "No changes to commit"
          git push origin main
