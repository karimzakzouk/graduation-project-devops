name: CI - Testing and Code Coverage
on:
  workflow_dispatch:
  workflow_call:
    outputs:
      test-result:
        description: "Test execution result"
        value: ${{ jobs.testing-and-coverage.outputs.result }}

env:
  MONGO_URI: ${{ secrets.MONGO_URI }}
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  testing-and-coverage:
    name: Testing and Code Coverage
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          - os: windows-latest
            python-version: "3.10"
    runs-on: ${{ matrix.os }}
    outputs:
      result: ${{ steps.coverage.outcome }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Needed for SonarQube

      - name: Setup Python Version - ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Unit Testing
        id: unit-tests
        run: pytest --junitxml=test-results.xml

      - name: Run Code Coverage
        id: coverage
        continue-on-error: true
        run: pytest --cov=. --cov-report=xml --cov-report=html

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test-Results-${{ matrix.os }}-${{ matrix.python-version }}
          path: test-results.xml
          retention-days: 1

      - name: Archive Coverage Report
        if: always() && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: actions/upload-artifact@v4
        with:
          name: Coverage-Report-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov/
          retention-days: 1

      - name: SonarQube Scan
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io