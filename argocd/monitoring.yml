apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: ${ARGOCD_NAMESPACE}
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "45.7.1"
    helm:
      skipCrds: false
      values: |
        crds:
          enabled: true  # Enable CRD installation
        prometheus:
          service:
            type: ClusterIP
        grafana:
          service:
            type: ClusterIP
          admin:
            existingSecret: grafana-admin-secret
            passwordKey: admin-password
        alertmanager:
          service:
            type: ClusterIP
  destination:
    server: https://kubernetes.default.svc
    namespace: ${MONITORING_NAMESPACE}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - SkipDryRunOnMissingResource=true

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: ${MONITORING_NAMESPACE}
spec:
  rules:
  - host: monitoring.yourdomain.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: kube-prometheus-stack-grafana
            port:
              number: 80
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: kube-prometheus-stack-prometheus
            port:
              number: 9090
      - path: /alertmanager
        pathType: Prefix
        backend:
          service:
            name: kube-prometheus-stack-alertmanager
            port:
              number: 9093