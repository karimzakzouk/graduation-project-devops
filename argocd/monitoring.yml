apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: ${ARGOCD_NAMESPACE}
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "45.7.1"
    helm:
      skipCrds: false
      values: |
        crds:
          enabled: true
        
        prometheus:
          service:
            type: ClusterIP
          prometheusSpec:
            externalUrl: http://monitoring.yourdomain.com/prometheus
            routePrefix: /
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /$2
              nginx.ingress.kubernetes.io/use-regex: "true"
            hosts:
              - monitoring.yourdomain.com
            paths:
              - /prometheus(/|$)(.*)
        
        grafana:
          service:
            type: ClusterIP
          admin:
            existingSecret: grafana-admin-secret
            userKey: admin-user
            passwordKey: admin-password
          grafana.ini:
            server:
              root_url: http://monitoring.yourdomain.com/grafana
              serve_from_sub_path: true
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /$2
              nginx.ingress.kubernetes.io/use-regex: "true"
            hosts:
              - monitoring.yourdomain.com
            paths:
              - /grafana(/|$)(.*)

        alertmanager:
          service:
            type: ClusterIP
          alertmanagerSpec:
            externalUrl: http://monitoring.yourdomain.com/alertmanager
            routePrefix: /
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /$2
              nginx.ingress.kubernetes.io/use-regex: "true"
            hosts:
              - monitoring.yourdomain.com
            paths:
              - /alertmanager(/|$)(.*)

  destination:
    server: https://kubernetes.default.svc
    namespace: ${MONITORING_NAMESPACE}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - SkipDryRunOnMissingResource=true