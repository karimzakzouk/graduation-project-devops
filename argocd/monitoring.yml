apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: ${ARGOCD_NAMESPACE}
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "45.7.1"
    helm:
      skipCrds: false
      values: |
        crds:
          enabled: true
        
        prometheus:
          service:
            type: ClusterIP
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
            hosts:
              - host: monitoring.yourdomain.com
                paths:
                  - path: /prometheus
                    pathType: Prefix
        
        grafana:
          service:
            type: ClusterIP
          admin:
            existingSecret: grafana-admin-secret
            passwordKey: admin-password
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
            hosts:
              - host: monitoring.yourdomain.com
                paths:
                  - path: /grafana
                    pathType: Prefix
        
        alertmanager:
          service:
            type: ClusterIP
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
            hosts:
              - host: monitoring.yourdomain.com
                paths:
                  - path: /alertmanager
                    pathType: Prefix

  destination:
    server: https://kubernetes.default.svc
    namespace: ${MONITORING_NAMESPACE}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - SkipDryRunOnMissingResource=true